{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DLOI_CW8_HirokiHayakawa","provenance":[{"file_id":"1DJJMz6MvMMpcwmNUKxX3_WRXoXfoGXtq","timestamp":1586414071966},{"file_id":"1dCsBC68IbrdHIqtyN9NDBNDQ823EBWxh","timestamp":1586344305304},{"file_id":"1VT69LY6bT_LZlT9sMGWGwUBK4-K86fxh","timestamp":1554763498797},{"file_id":"11aj9JnEOFImLL4fC2sV5tBBJi7iYDKiG","timestamp":1554761981152},{"file_id":"1LsfPFefoBmdYT8HqRE38itBr46o3Aey2","timestamp":1554758510525},{"file_id":"1MszsYWxYQb3pdJg88PN49hkuwwIt2VaL","timestamp":1554755251350}],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"v74B0Tnlfe4c","colab_type":"text"},"source":["# Regression netowrk Task 1"]},{"cell_type":"markdown","metadata":{"id":"4MiKScJgfp3q","colab_type":"text"},"source":["## import libraries"]},{"cell_type":"code","metadata":{"id":"GkqFW3e5qdIb","colab_type":"code","colab":{}},"source":["import numpy as np\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import glob\n","import cv2\n","import os\n","import pathlib\n","from zipfile import ZipFile\n","import numpy.linalg as lg\n","\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import Input, Activation\n","from tensorflow.python.keras.layers import Conv2D, MaxPooling2D, LeakyReLU\n","from tensorflow.python.keras.layers import concatenate, UpSampling2D, BatchNormalization\n","from tensorflow.keras.layers import Dense, Dropout, Flatten\n","from tensorflow.keras.optimizers import Adam"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"78CiCHzfqmC_","colab_type":"text"},"source":["## Load images"]},{"cell_type":"code","metadata":{"id":"GhJdFpgJpAud","colab_type":"code","colab":{}},"source":["# obtain path to the images\n","with ZipFile('droplets.zip', 'r') as zip:\n","    if not os.path.isdir('droplets/'):\n","        os.mkdir('droplets/')\n","    zip.extractall(path = 'droplets/')\n","image_folders = pathlib.Path('droplets/')\n","load_loc = list(image_folders.glob('load/**/*.png'))\n","test_loc = list(image_folders.glob('test/**/*.png'))\n","testnt_loc = list(image_folders.glob('testnt/**/*.png'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"TFTGTtC7uM2Q","colab_type":"code","colab":{}},"source":["# define function to load images\n","def make_data(path):\n","    dim = (600,32)\n","    flow_data = [float(str(i).split('/')[2]) for i in path] \n","    image_data = [cv2.resize(cv2.imread(str(i), cv2.IMREAD_GRAYSCALE),dim) for i in path]\n","    return np.array(image_data), np.array(flow_data)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3DLH0bO82gCW","colab_type":"code","colab":{}},"source":["# obtain images for train and test and normalize them\n","input_train, output_train = make_data(load_loc)\n","input_train = input_train / 255.0\n","output_train = output_train / 100\n","input_test, output_test = make_data(test_loc)\n","input_test = input_test / 255.0\n","output_test = output_test / 100\n","input_testnt, output_testnt = make_data(testnt_loc)\n","input_testnt = input_testnt / 255.0\n","output_testnt = output_testnt / 100"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_6JgQ0Fp3QkH","colab_type":"code","colab":{}},"source":["# define network\n","def regression_network(\n","    input_train = input_train, \n","    output_train = output_train,\n","    num_hidden_nodes = 80,\n","    optimizer_type = Adam(lr=2e-4),\n","    loss = 'mean_squared_error',\n","    metrics = ['mean_absolute_error'],\n","    validtrain_split_ratio = 0.2,\n","    dropout_ratio = 0.0,\n","    max_epochs = 5,\n","    batch_size = 32,\n","    batch_shuffle = True):\n","\n","    # define input shape\n","    input_shape = (32, 600, 1)\n","    inputs = Input(shape=input_shape)\n","\n","    # define network\n","\n","    down0 = Conv2D(16, (5, 5), padding='same')(inputs)\n","    # down0 = BatchNormalization()(down0)\n","    down0 = Activation('relu')(down0)\n","        \n","    down1 = Conv2D(32, (5, 5), padding='same')(down0)\n","    # down1 = BatchNormalization()(down1)\n","    down1 = Activation('relu')(down1)\n","    down1_pool = MaxPooling2D((2, 2), strides=(2, 2))(down1)\n","\n","    down2 = Conv2D(64, (5, 5), padding='same')(down1_pool)\n","    # down2 = BatchNormalization()(down2)\n","    down2 = Activation('relu')(down2)\n","    down2_pool = MaxPooling2D((2, 2), strides=(2, 2))(down2)\n","\n","    flatten = Flatten()(down2_pool)   # \n","\n","    dense_1 = Dense(num_hidden_nodes)(flatten)\n","    dense_1 = Activation('relu')(dense_1)\n","    dense_1 = Dropout(dropout_ratio)(dense_1)\n","\n","    # dense_2 = Dense(1)(dense_1)\n","    # outputs = Activation('relu')(dense_2)\n","    outputs = Dense(1)(dense_1)\n","\n","    # compile the network\n","    model = Model(inputs=inputs, outputs=outputs)\n","    model.compile(optimizer=optimizer_type, loss=loss)\n","    # Display a summary of the compiled neural network\n","    print(model.summary())  \n","    print()\n","\n","    print('* Training the compiled network *')\n","    print()\n","    history = model.fit(input_train, output_train, \\\n","                        batch_size=batch_size, \\\n","                        epochs=max_epochs, \\\n","                        validation_split=validtrain_split_ratio, \\\n","                        shuffle=batch_shuffle)\n","    print()\n","    print('Training completed')\n","    print()\n","\n","    return model, history"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZCJaC5WRASWi","colab_type":"code","outputId":"6b875a24-af66-40f1-f4bd-efa51c2fbd0f","executionInfo":{"status":"ok","timestamp":1586467885794,"user_tz":-120,"elapsed":26360,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":956}},"source":["model, history = regression_network()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         [(None, 32, 600, 1)]      0         \n","_________________________________________________________________\n","conv2d (Conv2D)              (None, 32, 600, 16)       416       \n","_________________________________________________________________\n","activation (Activation)      (None, 32, 600, 16)       0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 32, 600, 32)       12832     \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 32, 600, 32)       0         \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 16, 300, 32)       0         \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 16, 300, 64)       51264     \n","_________________________________________________________________\n","activation_2 (Activation)    (None, 16, 300, 64)       0         \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 8, 150, 64)        0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 76800)             0         \n","_________________________________________________________________\n","dense (Dense)                (None, 80)                6144080   \n","_________________________________________________________________\n","activation_3 (Activation)    (None, 80)                0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 80)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 1)                 81        \n","=================================================================\n","Total params: 6,208,673\n","Trainable params: 6,208,673\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","\n","* Training the compiled network *\n","\n","Epoch 1/5\n","169/169 [==============================] - 5s 27ms/step - loss: 0.0945 - val_loss: 0.0036\n","Epoch 2/5\n","169/169 [==============================] - 4s 25ms/step - loss: 7.2250e-04 - val_loss: 0.0036\n","Epoch 3/5\n","169/169 [==============================] - 4s 25ms/step - loss: 4.6246e-04 - val_loss: 0.0048\n","Epoch 4/5\n","169/169 [==============================] - 4s 25ms/step - loss: 3.2550e-04 - val_loss: 0.0040\n","Epoch 5/5\n","169/169 [==============================] - 4s 25ms/step - loss: 3.2151e-04 - val_loss: 0.0055\n","\n","Training completed\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-pkFWakyDEjd","colab_type":"code","colab":{}},"source":["# function to plot every prediction points\n","def plot_prediction(model, input_test = input_test, output_test = output_test,\n","                input_testnt = input_testnt, output_testnt = output_testnt):\n","    model_out = model.predict(input_test)\n","    model_outnt = model.predict(input_testnt)\n","    fig, ax = plt.subplots()\n","    ax.plot(output_test, output_test, color = 'k', linestyle = 'dotted')\n","    ax.scatter(output_test, model_out, label = 'Flow rates trained for', color = 'r', marker = 'o')\n","    ax.scatter(output_testnt, model_outnt, label = 'Flow rates not trained for', color = 'b', marker = 'o')\n","    ax.set_xlabel('True value (ml/h)')\n","    ax.set_ylabel('Predicted value (ml/h)')\n","    ax.legend()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Frtf2ULsPPBc","colab_type":"code","outputId":"0b2707a2-645a-458a-9ea6-122bcf20244d","executionInfo":{"status":"ok","timestamp":1586467886291,"user_tz":-120,"elapsed":25293,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":279}},"source":["# plot every prediction\n","plot_prediction(model)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nty6nnnoqO3bs4Ntvv6Vly5Z069aNp59+mgsvvDDsOX/++Wfq169Pamoqa9asYcmSJSX7kpOTyc/P\nB6B3797MmjWL7du3A26+YsOGDezYsYOioiKuvvpqHn/8cT777LNyr3H88cezd+/ekDE0adIEgGnT\npnn/hQAXX3wxkydPZt++fQBs2bKF7du3c+GFF/Lmm29y8OBB9u7dy5w5c8Keq0uXLnz44Yfs2LGD\nwsJCZsyYQffu3SsUjzHRtHbtWm644Qb2799PUlISCxYsKJlni7TE6wjGjgXfkEOJ1FTXHkFjxoxh\n2bJlpKWlMXr06FJvmueccw5nnnkm4DqMLVu20K1bt7DnvOSSSygoKODss89m9OjRdO3atWTf8OHD\nSUtLIzMzk9atW/P4449z0UUXkZaWRt++ffnhhx/YsmULPXr0oH379gwZMoQ//elP5V5j0KBBPPXU\nU3To0IHvvvsu4M91zTXX0KlTJxo2bFih38lFF13Eddddx7nnnku7du0YOHAge/fupWPHjlx77bWk\np6fTr1+/kiGtUE4++WSeeOIJevbsSXp6Op06deLKK6+sUDzGVFqfPiBy5NGnj+enbt26lTlz5pQs\nJKlVq/renqX4Mj1eZGRkaNnCNF999RVnn32295NkZ7s5gY0b3ZXA2LFVdoeeSWwV/ls0NUefPjB/\nfvn23r3h/fcDPiUnJ4fVq1dzww03AG5uoG7duqUPCnXHegXev0VkmapmBNqXeJPF4N707Y3fGFOV\nAnUCodqBcePG8fnnnzNo0CBSUlLKdwLVJPGGhowxJormzZvHDz/8AMCECRNYtmwZKSkpUY3JOgJj\njKkm27Zt48orr2TcuHEANGrUiF/+8pdRjipRh4aMMaaaKLD0v/+lS5cuNG7cmLlz59KlS5doh1VK\nxK4IRGSyiGwXkZVhjussIgUiMjBSsRhjTLS8gFsZuHTpUsDdO1S7dm3vJ/C7B8dT+1GI5NDQVOCS\nUAeISBIwDpgXwTiMMaZaFQLbfd9nApMmTaJjx45Hd7IXXyy/ckjEtVeRiHUEqroQ2BXmsLuA1zjy\nO4tbNTUNdUWtX7+eV155pcL7wjnvvPMqE1apGNq2bRtw3wMPPECbNm144IEHquS1TOK6EuiP6xDq\n4O7rOeq72zMz4eWXoXlz1wE0b+62q3DlY9Qmi0WkCXAVMNHDscNFJEdEcnJzcyMf3FGoqWmoK+po\n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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"P4PeDJyvXgOY","colab_type":"code","colab":{}},"source":["# function to plot mean and std for each flow rate\n","def plot_meanstd(model, input_test = input_test, output_test = output_test,\n","                input_testnt = input_testnt, output_testnt = output_testnt):\n","    model_out = model.predict(input_test)\n","    model_outnt = model.predict(input_testnt)\n","    unique_test = np.unique(output_test)\n","    unique_testnt = np.unique(output_testnt)\n","    out_mean = []\n","    out_std = []\n","    for i in unique_test:\n","        idx = np.where(output_test == i)\n","        out_mean.append(np.mean(model_out[idx]))\n","        out_std.append(np.std(model_out[idx]))\n","    outnt_mean = []\n","    outnt_std = []\n","    for j in unique_testnt:\n","        idx = np.where(output_testnt == j)\n","        outnt_mean.append(np.mean(model_outnt[idx]))\n","        outnt_std.append(np.std(model_outnt[idx]))\n","\n","    fig, ax = plt.subplots()\n","    ax.plot(unique_test, unique_test, color = 'k', linestyle = 'dotted')\n","    ax.errorbar(unique_test, out_mean, out_std, linestyle='None', label = 'Flow rates trained for', color = 'r', marker = 'o')\n","    ax.errorbar(unique_testnt, outnt_mean, outnt_std, linestyle='None', label = 'Flow rates not trained for', color = 'b', marker = 'o')\n","    ax.set_xlabel('True value (ml/h)')\n","    ax.set_ylabel('Predicted value (ml/h)')\n","    ax.legend()\n","    return out_std, outnt_std"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"h9qRWKaylmGi","colab_type":"code","outputId":"a830c616-315a-481e-e515-10d478ddc620","executionInfo":{"status":"ok","timestamp":1586467887096,"user_tz":-120,"elapsed":24844,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":279}},"source":["# plot mean and std of predicted points\n","out_std, outnt_std = plot_meanstd(model)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nCPf/AZHvgLM8z3PfAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"RIVE_Aj_yZ-j","colab_type":"code","colab":{}},"source":["# function to calculate mse\n","def mse(model, output_test=output_test, output_testnt=output_testnt,\n","        input_test=input_test, input_testnt=input_testnt):\n","    n = output_test.shape[0] + output_testnt.shape[0]\n","    dout_test = output_test - model.predict(input_test)\n","    dout_testnt = output_testnt - model.predict(input_testnt)\n","    return (lg.norm(dout_test)*2 + lg.norm(dout_testnt)*2) / n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"d3JtHZV7yzvj","colab_type":"code","outputId":"37be7da0-7810-4ec0-a975-4a7f1efa16d3","executionInfo":{"status":"ok","timestamp":1586467887808,"user_tz":-120,"elapsed":23558,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["mse(model)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.1616503685265656"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"zjVAdqnYrJef","colab_type":"text"},"source":["## Task 2"]},{"cell_type":"code","metadata":{"id":"-phl3JDtrKU-","colab_type":"code","colab":{}},"source":["# define revised network, \n","# one more convolusion layer is added and num hidden node in dense layer increased\n","def regression_network_rev(\n","    input_train = input_train, \n","    output_train = output_train,\n","    num_hidden_nodes = 250,\n","    optimizer_type = Adam(lr=2e-4),\n","    loss = 'mean_squared_error',\n","    metrics = ['mean_absolute_error'],\n","    validtrain_split_ratio = 0.2,\n","    dropout_ratio = 0.1,\n","    max_epochs = 5,\n","    batch_size = 32,\n","    batch_shuffle = True):\n","\n","    # define input shape\n","    input_shape = (32, 600, 1)\n","    inputs = Input(shape=input_shape)\n","\n","    # define network\n","\n","    down0 = Conv2D(16, (5, 5), padding='same')(inputs)\n","    # down0 = BatchNormalization()(down0)\n","    down0 = Activation('relu')(down0)\n","        \n","    down1 = Conv2D(32, (5, 5), padding='same')(down0)\n","    # down1 = BatchNormalization()(down1)\n","    down1 = Activation('relu')(down1)\n","    down1_pool = MaxPooling2D((2, 2), strides=(2, 2))(down1)\n","\n","    down2 = Conv2D(64, (5, 5), padding='same')(down1_pool)\n","    # down2 = BatchNormalization()(down2)\n","    down2 = Activation('relu')(down2)\n","    down2_pool = MaxPooling2D((2, 2), strides=(2, 2))(down2)\n","\n","    down3 = Conv2D(128, (5, 5), padding='same')(down2_pool)\n","    # down3 = BatchNormalization()(down3)\n","    down3 = Activation('relu')(down3)\n","    down3_pool = MaxPooling2D((2, 2), strides=(2, 2))(down3)\n","\n","    flatten = Flatten()(down3_pool)   # \n","\n","    dense_1 = Dense(num_hidden_nodes)(flatten)\n","    dense_1 = Activation('relu')(dense_1)\n","    dense_1 = Dropout(dropout_ratio)(dense_1)\n","\n","    # dense_2 = Dense(1)(dense_1)\n","    # outputs = Activation('relu')(dense_2)\n","    outputs = Dense(1)(dense_1)\n","\n","    # compile the network\n","    model = Model(inputs=inputs, outputs=outputs)\n","    model.compile(optimizer=optimizer_type, loss=loss)\n","    # Display a summary of the compiled neural network\n","    print(model.summary())  \n","    print()\n","\n","    print('* Training the compiled network *')\n","    print()\n","    history = model.fit(input_train, output_train, \\\n","                        batch_size=batch_size, \\\n","                        epochs=max_epochs, \\\n","                        validation_split=validtrain_split_ratio, \\\n","                        shuffle=batch_shuffle)\n","    print()\n","    print('Training completed')\n","    print()\n","\n","    return model, history"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"85JgMH_xsGMc","colab_type":"code","outputId":"74a750b4-2dbd-4d9a-fc97-08ef035d4daf","executionInfo":{"status":"ok","timestamp":1586468394610,"user_tz":-120,"elapsed":27390,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["model_r, history_r = regression_network_rev()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Model: \"model_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_7 (InputLayer)         [(None, 32, 600, 1)]      0         \n","_________________________________________________________________\n","conv2d_23 (Conv2D)           (None, 32, 600, 16)       416       \n","_________________________________________________________________\n","activation_29 (Activation)   (None, 32, 600, 16)       0         \n","_________________________________________________________________\n","conv2d_24 (Conv2D)           (None, 32, 600, 32)       12832     \n","_________________________________________________________________\n","activation_30 (Activation)   (None, 32, 600, 32)       0         \n","_________________________________________________________________\n","max_pooling2d_17 (MaxPooling (None, 16, 300, 32)       0         \n","_________________________________________________________________\n","conv2d_25 (Conv2D)           (None, 16, 300, 64)       51264     \n","_________________________________________________________________\n","activation_31 (Activation)   (None, 16, 300, 64)       0         \n","_________________________________________________________________\n","max_pooling2d_18 (MaxPooling (None, 8, 150, 64)        0         \n","_________________________________________________________________\n","conv2d_26 (Conv2D)           (None, 8, 150, 128)       204928    \n","_________________________________________________________________\n","activation_32 (Activation)   (None, 8, 150, 128)       0         \n","_________________________________________________________________\n","max_pooling2d_19 (MaxPooling (None, 4, 75, 128)        0         \n","_________________________________________________________________\n","flatten_6 (Flatten)          (None, 38400)             0         \n","_________________________________________________________________\n","dense_12 (Dense)             (None, 250)               9600250   \n","_________________________________________________________________\n","activation_33 (Activation)   (None, 250)               0         \n","_________________________________________________________________\n","dropout_6 (Dropout)          (None, 250)               0         \n","_________________________________________________________________\n","dense_13 (Dense)             (None, 1)                 251       \n","=================================================================\n","Total params: 9,869,941\n","Trainable params: 9,869,941\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","\n","* Training the compiled network *\n","\n","Epoch 1/5\n","169/169 [==============================] - 5s 30ms/step - loss: 0.0546 - val_loss: 7.0299e-04\n","Epoch 2/5\n","169/169 [==============================] - 5s 29ms/step - loss: 0.0029 - val_loss: 0.0099\n","Epoch 3/5\n","169/169 [==============================] - 5s 29ms/step - loss: 0.0026 - val_loss: 0.0064\n","Epoch 4/5\n","169/169 [==============================] - 5s 29ms/step - loss: 0.0027 - val_loss: 0.0025\n","Epoch 5/5\n","169/169 [==============================] - 5s 29ms/step - loss: 0.0023 - val_loss: 0.0026\n","\n","Training completed\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zcJI0IrGxEvP","colab_type":"code","outputId":"638b2859-7225-451c-b2bd-86b2b2d1885b","executionInfo":{"status":"ok","timestamp":1586468395126,"user_tz":-120,"elapsed":27537,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":279}},"source":["# plot mean and std of predicted points\n","plot_prediction(model_r)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYIAAAEGCAYAAABo25JHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nO3deXhU5fXA8e/JghB22aQsQVFBtrCJ\naGWRoLgCVapikMUFRVFcK0p/lVZpVWytC4qxsihRrCiL1gWlCKiggAsIoqASCFIIKMgm2c7vjzsJ\nk2QyuZPMZGYy5/M882Tue+/ce7LNmfu+955XVBVjjDGxKy7cARhjjAkvSwTGGBPjLBEYY0yMs0Rg\njDExzhKBMcbEuIRwBxCoxo0ba5s2bcIdhjHGRJW1a9fuUdUmvtZFXSJo06YNa9asCXcYxhgTVUQk\ns6x11jVkjDExzhKBMcbEOEsExhgT46JujMCX3NxcsrKy+PXXX8MdiolhNWvWpGXLliQmJoY7FGMC\nUi0SQVZWFnXr1qVNmzaISLjDMTFIVdm7dy9ZWVmceOKJ4Q7HmIBUi66hX3/9lUaNGlkSMGEjIjRq\n1MjOSk1oZGRAmzYQF+d8zcgI6u6rxRkBYEnAhJ39DZqQyMiAESOOLWdmHltOSwvKIarFGYExxlRb\no0YF1l4BlgiCJD4+nq5duxY9tm7dygcffMDFF18clnj++te/BmU/CxYsYOPGjQG/btGiRTz00ENB\niWHy5Mk8+uijpdqzs7M544wz6NatGytWrAjKsYyJOPn5gbVXgCWCIKlVqxZffPFF0SPUZTDy8vL8\nrq+KROAvhsGDBzNx4sSgxFCWJUuW0LlzZz7//HP69Onj6jX5QfznMaa6iM1EEOKBF19++uknhg4d\nSpcuXejduzfr1q0DoHPnzuzbtw9VpVGjRrzwwgsAjBw5kvfee6/YPj744AP69OnD4MGD6dChAwBD\nhw6lR48edOzYkfT0dAAmTpzIkSNH6Nq1K2mePsQ5c+bQq1cvunbtyg033EB+fj75+fmMHj2aTp06\n0blzZx577LFix/v4449ZtGgRd999N127duW7776jf//+3HbbbfTs2ZPHH3+cN954o+hT+cCBA9m1\naxcAs2bNYvz48QCMHj2aW2+9lbPOOouTTjqJefPmFR1j6tSpnH766XTp0oX777+/qH3KlCmceuqp\nnH322XzzzTelfp5ffPEFf/jDH1i4cCFdu3blyJEjvPzyy3Tu3JlOnTpxzz33FG1bp04d7rzzTlJS\nUli5cmUFfnvGhF9BKHeuqlH16NGjh5a0cePGUm1lmjNHNSlJFY49kpKc9kqIi4vTlJQUTUlJ0aFD\nh6qq6tKlS/Wiiy5SVdXx48fr5MmTVVV1yZIlmpKSoqqqN9xwg7755pu6fv167dmzp1533XWqqnry\nySfrwYMHix1j6dKlmpSUpN9//31R2969e1VV9fDhw9qxY0fds2ePqqrWrl27aJuNGzfqxRdfrDk5\nOaqqOm7cOJ09e7auWbNGBw4cWLTdzz//XOr7GjVqlL766qtFy/369dNx48YVLf/0009aUFCgqqrP\nPfec3nHHHaqqOnPmTL355puL9jFs2DDNz8/XDRs2aNu2bVVV9d1339Xrr79eCwoKND8/Xy+66CJd\ntmyZrlmzRjt16qSHDh3S/fv3a9u2bXXq1KmlYvM+xo4dO7RVq1a6e/duzc3N1XPOOUfnz5+vqqqA\nvvLKK6VeHwoB/S0a4wbo30AHgRZ4v29BgLthjZbxvlptrhpybdIkOHy4eNvhw057JUbgC7uGyvLh\nhx/y2muvATBgwAD27t3LL7/8Qp8+fVi+fDnJycmMGzeO9PR0duzYQcOGDaldu3ap/fTq1avYdepP\nPPEE8+fPB2D79u1s3ryZRo0aFXvNkiVLWLt2LaeffjoAR44coWnTplxyySV8//333HLLLVx00UWc\nd955rr7XK664ouh5VlYWV1xxBTt37iQnJ6fMa+iHDh1KXFwcHTp0KDprWLx4MYsXL6Zbt24AHDx4\nkM2bN3PgwAF+97vfkZSUBDjdTOVZvXo1/fv3p0kTp7hiWloay5cvZ+jQocTHx3PZZZe5+t6MiUTH\nA82AX4FaIdh/7HUNbdsWWHuI9e3blxUrVrBixYqiN7J58+aV2eftnRw++OAD3n//fVauXMmXX35J\nt27dfF7HrqqMGjWqaPzim2++YfLkyTRs2JAvv/yS/v37M336dK677jpXMXvHcMsttzB+/HjWr1/P\ns88+W+Z19Mcdd1yxeAq/3nvvvUVxbdmyhWuvvdZVDIGoWbMm8fHxQd+vMaFy6NAhbrjhBhYtWgTA\nWGA2oUkCEIuJoHXrwNqDpE+fPmR4xiI++OADGjduTL169WjVqhV79uxh8+bNnHTSSZx99tk8+uij\n9O3bt9x97t+/n4YNG5KUlMSmTZtYtWpV0brExERyc3MBSE1NZd68eezevRtwxisyMzPZs2cPBQUF\nXHbZZTz44IN89tlnpY5Rt25dDhw44DeGFi1aADB79mz3PxBg0KBBzJgxg4MHDwKwY8cOdu/eTd++\nfVmwYAFHjhzhwIEDvPHGG+Xuq1evXixbtow9e/aQn5/Pyy+/TL9+/QKKx5hIUaNGDVavXs3XX39d\nJceLvUQwZQp4uhyKJCU57SE0efJk1q5dS5cuXZg4cWKxN80zzjiDU089FXASxo4dOzj77LPL3ef5\n559PXl4ep512GhMnTqR3795F68aOHUuXLl1IS0ujQ4cOPPjgg5x33nl06dKFc889l507d7Jjxw76\n9+9P165dGTFiBH/7299KHePKK69k6tSpdOvWje+++87n9/X73/+eHj160Lhx44B+Jueddx5XXXUV\nZ555Jp07d2bYsGEcOHCA7t27c8UVV5CSksIFF1xQ1KXlT/PmzXnooYc455xzSElJoUePHgwZMiSg\neIyptIEDQeTYY+BA1y/dsWMHEyZM4OjRoyQmJrJq1apiFz2EVFmDB5H6qPRgsaozMJycrCrifK3k\nQLExhWywOIalphYfyC18pKa6evk777yjtWrV0hUrVhRf4WufNlgcBGlpQbs12xhjAFiyJLB24Ouv\nv+brr7/m0ksvZdCgQWzdupWmTZuGKMCyxV7XkDHGRIiJEydy++23k5OTAxCWJADVqOicMcZEg5Ur\nV3LqqafSqFEjnn76aRISEqhRo0ZYY7IzAmOMqSK7du2if//+PPjggwC0aNGCZs2ahTkqOyMwxpiQ\n27RpE+3bt6dZs2a8/vrrri4PL9KoEezd67s9SEJ2RiAiM0Rkt4h8Vc52p4tInogMC1UsxhgTLv8C\nOnbsWFR54KKLLqJu3brud/D441Cy66hGDac9SELZNTQLON/fBiISDzwMLA5hHFWiupahDtTWrVt5\n6aWXAl5XnrPOOqsyYRWLoVOnTj7X3X333XTs2JG77747KMcysUuBfZ7nvwcefvjhokKRAUtLgxkz\nIDnZuTchOdlZDuKVjyFLBKq6HPipnM1uAV4DdocqjqpSXctQB6qiiaC87+fjjz+udGzlSU9PZ926\ndUydOtXV9uXFbGLXMOB3OAmhPnDXXXdVbkA4LQ22boWCAudrkC9/D9tgsYi0wPlZPeNi27EiskZE\n1mRnZ1f62GGoQh2VZaih7BLSqsrdd99d9NpXXnml6NgrVqyga9eupfZXct2sWbMYPHgwAwYMIDU1\nlYMHD5Kamkr37t3p3LkzCxcuLHptnTp1in4G/fv3Z9iwYbRv3560tLSi2kVr166lX79+9OjRg0GD\nBrFz586i9pSUFFJSUpg2bZrP38/gwYM5ePAgPXr04JVXXmHr1q0MGDCALl26kJqayjZPLarRo0dz\n4403csYZZ/CHP/yh/F+8iRneM10MAa7ESQRlCcf7UJnKutMsGA+gDfBVGeteBXp7ns8ChrnZZ2Xv\nLA5RFepqXYbaVwnpefPm6cCBAzUvL0//97//aatWrfTHH38s9j2XVHLdzJkztUWLFkXfQ25uru7f\nv19VVbOzs7Vt27ZFJa4Lv5+lS5dqvXr1dPv27Zqfn6+9e/fWFStWaE5Ojp555pm6e/duVVWdO3eu\njhkzRlVVO3furMuWLVNV1bvuuks7duzoMz7vn9nFF1+ss2bNUlXV559/XocMGVL087jooos0Ly/P\n5z7szuLYtH37dk0BXeDyDuA5c1QTEopvkpAQ2iIHROidxT2BuZ4JvxsDF4pInqouCOVBQ1SFulqX\nofZVQvrDDz9k+PDhxMfH06xZM/r168fq1aupV69eAD81OPfcczn++OMB50PJfffdx/Lly4mLi2PH\njh3s2rWLE044odTPoGXLlgBF4zENGjTgq6++4txzzwWcmciaN2/Ovn372LdvX9FVGldffTVvv/12\nuXGtXLmS119/veg13p/+f//731s1U1NMs2bN+A3gtvPnxhuhZM9iXp7THo6iB2FLBKpa9G4mIrOA\nN0OdBCDiqlDTt29fpk2bxrZt25gyZQrz58+vUBnqpKQk+vfv77cMta+icl9++SXvvvsu06dP59//\n/jczZswotY2vEtLB4v39ZGRkkJ2dzdq1a0lMTKRNmzY+vx/veOLj48nLy0NV6dixY6kZyPbt21fy\n5UGN2cSuDz74gIcffpj58+dTs2ZN3grgtZ6Cu67bQy2Ul4++DKwE2olIlohcKyI3isiNoTqmG2Gq\nQh21Zaj9fT+vvPIK+fn5ZGdns3z5cnr16uW3bLWbktZNmzYlMTGRpUuXkpmZ6Tqedu3akZ2dXZQI\ncnNz2bBhAw0aNKBBgwZ8+OGHAEW/g/KcddZZzJ07t+g1budENrHj6NGjbN26lR07doQ7lEoL2RmB\n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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"bkt8PsbouVVI","colab_type":"code","outputId":"4a43ddfe-9c40-449a-b847-830e38665dd0","executionInfo":{"status":"ok","timestamp":1586468396294,"user_tz":-120,"elapsed":28361,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":279}},"source":["# plot mean and std of predicted points\n","out_std, outnt_std = plot_meanstd(model_r)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYIAAAEGCAYAAABo25JHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nO3deXxU9dX48c9JCCQRoqxKgQRFy05Y\nIgJlk00KiqAo0riAC4Vf0WpbFEt95PER92q10iJawCUoFUVxBfVhU8CHYFFkcWMNogSQfctyfn/c\nSZyEWW4gM5OZOe/Xa15k7r1z52SYzJn7Xc5XVBVjjDHxKyHSARhjjIksSwTGGBPnLBEYY0ycs0Rg\njDFxzhKBMcbEuWqRDqCi6tWrp02bNo10GMYYE1VWr169W1Xr+9oXdYmgadOm5ObmRjoMY4yJKiKy\n1d8+axoyxpg4Z4nAGGPinCUCY4yJc1HXR+BLQUEBeXl5HDt2LNKhmDiWnJxM48aNSUpKinQoxlRI\nTCSCvLw8atWqRdOmTRGRSIdj4pCqsmfPHvLy8jj33HMjHY4xFRITTUPHjh2jbt26lgRMxIgIdevW\ntatSE5ViIhEAlgRMxNl70ESrmEkEFda7t3MzxpgoUFRUFLJzx28iqGSJiYm0b9++9LZlyxYWL17M\npZdeGpF4HnjggUo5zxtvvMH69esr/Lj58+fz0EMPVUoMkydP5rHHHjtpe35+PhdddBEdOnRg2bJl\nlfJcxlRF6//yF3YnJaEi0LQp5ORU6vnjMxHk5MDKlbBkSaW9qCkpKaxZs6b0FuoyGIWFhQH3hyMR\nBIphyJAhTJw4sVJi8Oejjz6ibdu2/Oc//6FHjx6uHhPKb1XGVLajR49CTg4tn3iCs1URgK1bYcyY\nSk0G8ZcIcnKcF/H4ced+CF5UX/bu3cvQoUNp164dXbp04YsvvgCgbdu27Nu3D1Wlbt26vPDCCwBc\nf/31fPDBB2XOsXjxYnr06MGQIUNo1aoVAEOHDqVTp060bt2a6dOnAzBx4kSOHj1K+/btyc7OBuCl\nl16ic+fOtG/fnt/+9rcUFRVRVFTEqFGjaNOmDW3btuWJJ54o83zLly9n/vz5TJgwgfbt2/Pdd9/R\nu3dvbr/9drKysnjyySd56623Sr+V9+vXjx9//BGAWbNmMX78eABGjRrFbbfdRrdu3TjvvPOYO3du\n6XM8+uijXHjhhbRr14577723dPuUKVP45S9/Sffu3fnqq69Oej3XrFnDnXfeyZtvvkn79u05evQo\nL7/8Mm3btqVNmzbcddddpcfWrFmTP/7xj2RmZrJixYpT+N8zJvzuv/9+srKyKL77buTIkbI7jxyB\nSZMq78lUNapunTp10vLWr19/0ja/MjJU4eRbRob7c/iQkJCgmZmZmpmZqUOHDlVV1UWLFungwYNV\nVXX8+PE6efJkVVX96KOPNDMzU1VVf/vb3+rbb7+ta9eu1aysLL355ptVVfX888/XQ4cOlXmORYsW\naWpqqm7atKl02549e1RV9ciRI9q6dWvdvXu3qqqeccYZpcesX79eL730Uj1x4oSqqo4bN06ff/55\nzc3N1X79+pUe99NPP530e91www366quvlt7v1auXjhs3rvT+3r17tbi4WFVVn332Wf3DH/6gqqoz\nZ87U3/3ud6XnGD58uBYVFem6deu0WbNmqqq6YMECveWWW7S4uFiLiop08ODBumTJEs3NzdU2bdro\n4cOHdf/+/dqsWTN99NFHT4rN+zl27NihTZo00V27dmlBQYFefPHFOm/ePFVVBXTOnDknPT4UKvRe\nNMaHkr+nBQsW6G233abFIr4/s0QqdF4gV/18rsbEPIIK2batYttdKmka8ufjjz/mtddeA6BPnz7s\n2bOHAwcO0KNHD5YuXUpGRgbjxo1j+vTp7Nixg9q1a3PGGWecdJ7OnTuXGaf+1FNPMW/ePAC2b9/O\nN998Q926dcs85qOPPmL16tVceOGFgHO52aBBAy677DI2bdrErbfeyuDBgxkwYICr33XEiBGlP+fl\n5TFixAh27tzJiRMn/I6hHzp0KAkJCbRq1ar0qmHhwoUsXLiQDh06AHDo0CG++eYbDh48yLBhw0hN\nTQWcZqZgVq1aRe/evalf3ymumJ2dzdKlSxk6dCiJiYlceeWVrn43YyLl2LFjjBkzhgsvvJBbb72V\nAQMGOH+Tb77ptFyUl55eac8df01D/l68SnxRK6Jnz54sW7aMZcuWlX6QzZ0712+bt3dyWLx4MR9+\n+CErVqzg888/p0OHDj7HsasqN9xwQ2n/xVdffcXkyZOpXbs2n3/+Ob1792batGncfPPNrmL2juHW\nW29l/PjxrF27lmeeecbvOPoaNWqUiafk37vvvrs0rm+//ZabbrrJVQwVkZycTGJiYqWf15jKVKNG\nDQ4cOMChQ4fK7pgyBTxfikqlpjrbK0n8JYIwvKi+9OjRgxxPP8TixYupV68eaWlpNGnShN27d/PN\nN99w3nnn0b17dx577DF69uwZ9Jz79++ndu3apKamsnHjRlauXFm6LykpiYKCAgD69u3L3Llz2bVr\nF+D0V2zdupXdu3dTXFzMlVdeyf33389nn3120nPUqlWLgwcPBoyhUaNGADz//PPuXxDgkksuYcaM\nGaVv/B07drBr1y569uzJG2+8wdGjRzl48CBvvfVW0HN17tyZJUuWsHv3boqKinj55Zfp1atXheIx\nJty+//57Ro0axZ49exAR5s2bx9133132oOxsmD4dMjJAxPl3+nRneyWJv6ahkhfvppucDuOMDCcJ\nVOKL6svkyZO58cYbadeuHampqWU+NC+66KLS0Sw9evTg7rvvpnv37kHPOXDgQKZNm0bLli1p3rw5\nXbp0Kd03ZswY2rVrR8eOHcnJyeH+++9nwIABFBcXk5SUxNSpU0lJSWH06NEUFxcD8OCDD570HNdc\ncw233HILTz31VJlOXu/f66qrrqJ27dr06dOHzZs3u35NBgwYwIYNG+jatSvgdOq+9NJLdOzYkREj\nRpCZmUmDBg1Km7QCadiwIQ899BAXX3wxqsrgwYO5/PLLXcdiTCTs3r2befPmcfXVVzNo0CD/kxKz\ns0P6GSUll+nRIisrS8svTLNhwwZatmxZsROVTCZbvLhS4jIGTvG9aOLKd999x6JFi0qbYg8cOEBa\nWlrIn1dEVqtqlq998dc0VGLxYksCxpiwe+KJJ5gwYQI//fQTQFiSQDDxmwiMMaay5eRAcrLTlu81\nWfXLL7/ku+++A5w5MmvXrqV27doRDLSskCUCEZkhIrtE5Msgx10oIoUiMjxUsRhjTMj5max6YtYs\n+vbty4QJEwA488wzady4cQQDPVkoO4tnAU8DL/g7QEQSgYeBhSGMwxhjQm/SJGfGr7cjR6g+eTJz\n5syhTZs2kYnLhZAlAlVdKiJNgxx2K/AaEHxYiDHGVGUBJqv2ruKVjiPWRyAijYBhwD8j8fxWhdoY\nU6mq2GTViohkZ/HfgLtUtTjYgSIyRkRyRSQ3Pz8/DKFVXKyWoa6oLVu2MHv27ArvC6Zbt26nE1aZ\nGPxdok+YMIHWrVuXtuUaUxGvdujA0fLzAMIwWbVS+CtCVBk3oCnwpZ99m4EtntshYBcwNNg5T7vo\nnKq+9JJqjRo/15p76aUKPdwn7yJvJbyLzlW2goKCCscTDoF+50D7gv0+lWXz5s3aunVrn/vS0tK0\nsLDQ9bl8xWxF5+JPSZG4hQsX6uxLL9WiJk2cgnCV9eFSSQhQdC5iVwSqeq6qNlXVpsBc4P+p6huh\nft4IVaGOyjLU4L+EtKoyYcKE0sfOmTOn9LmXLVtG+/btTzpf+X2zZs1iyJAh9OnTh759+3Lo0CH6\n9u1Lx44dadu2LW+++WbpY2vWrFn6GvTu3Zvhw4fTokULsrOzS2sXrV69ml69etGpUycuueQSdu7c\nWbo9MzOTzMxMpk6d6vP/Z8iQIRw6dIhOnToxZ84ctmzZQp8+fWjXrh19+/Zlm6f9d9SoUYwdO5aL\nLrqIO++8M/h/vIlZR48e5eqrr+app54CoH///ox86y0Stm2D4mLYsiXkFQsqjb8Mcbo34GVgJ1AA\n5AE3AWOBsT6OnQUMd3Pe070iCFEV6pguQ+2rhPTcuXO1X79+WlhYqD/88IM2adJEv//++wpdEcyc\nOVMbNWpU+jsUFBTo/v37VVU1Pz9fmzVrVvptq+T3WbRokaalpen27du1qKhIu3TposuWLdMTJ05o\n165dddeuXaqq+sorr+jo0aNVVbVt27a6ZMkSVVX905/+5PeKwPs1u/TSS3XWrFmqqvqvf/1LL7/8\n8tLXY/DgwX6vHOyKIH4UFxfrFVdcoY8//nikQ3GFSJShVtWRFTh2VKjiKC9EVahjugy1rxLSH3/8\nMSNHjiQxMZGzzz6bXr16sWrVqgrPkuzfvz916tQBnC8lf/7zn1m6dCkJCQns2LGDH3/8kXPOOeek\n16BkHHZJf8xZZ53Fl19+Sf/+/QFnJbKGDRuyb98+9u3bV1rE77rrruO9994LGteKFSt4/fXXSx/j\n/e3/qquusmqmcWr79u3cddddPPXUU9SrV4+5c+f6rw8UReKu6Fx6eshLe1dIz549mTp1Ktu2bWPK\nlCnMmzfvlMpQp6am0rt374BlqH0Vlfv8889ZsGAB06ZN49///jczZsw46RhfJaQri/fvk5OTQ35+\nPqtXryYpKYmmTZv6/H2840lMTKSwsBBVpXXr1ietQLZv375Kjbd8zCa+7N+/n/fff5/PPvuMAQMG\nxEQSgDgsMRGhKtRRW4Y60O8zZ84cioqKyM/PZ+nSpXTu3Dlg2Wo3Ja0bNGhAUlISixYtYquvjO1H\n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\ngg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"6Yl2Mh7q59WI","colab_type":"code","outputId":"3cc9d95f-2c6a-4a93-ef62-55557a432332","executionInfo":{"status":"ok","timestamp":1586468396302,"user_tz":-120,"elapsed":27749,"user":{"displayName":"早川弘記","photoUrl":"","userId":"15508845659654389667"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["mse(model_r)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.1490772184398177"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"markdown","metadata":{"id":"Or4ZwI8E7QtQ","colab_type":"text"},"source":["## with revised network, mse is slightly decreased"]},{"cell_type":"code","metadata":{"id":"yOhA1JvhyNKx","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}